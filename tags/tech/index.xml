<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tech on Falasool</title><link>https://falasool.github.io/tags/tech/</link><description>Recent content in tech on Falasool</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Falaool</copyright><lastBuildDate>Tue, 02 Apr 2024 19:41:35 +0800</lastBuildDate><atom:link href="https://falasool.github.io/tags/tech/index.xml" rel="self" type="application/rss+xml"/><item><title>JS|原型链的理解</title><link>https://falasool.github.io/posts/prototype-chain/</link><pubDate>Tue, 02 Apr 2024 19:41:35 +0800</pubDate><guid>https://falasool.github.io/posts/prototype-chain/</guid><description>先上图 一些概念 JS 中万物皆对象，分为普通对象和函数对象。 每个对象都有一个私有属性 [[Prototype]] ，私有属性指向原型 prototype，由于原型 prototype 也是对象，它</description></item><item><title>Html5|新特性PushState</title><link>https://falasool.github.io/posts/html5-pushstate/</link><pubDate>Tue, 12 Mar 2024 19:39:03 +0800</pubDate><guid>https://falasool.github.io/posts/html5-pushstate/</guid><description>History history.pushState() 是什么？简单来说，是目前浏览器已经普遍支持的一种添加浏览历史记录的方法。 首先，让我们来看看 history 对象，它保存了当前窗口访问过的所有页面网址 //</description></item><item><title>阅读｜《图解HTTP》</title><link>https://falasool.github.io/posts/read-understand-http/</link><pubDate>Thu, 07 Mar 2024 19:13:22 +0800</pubDate><guid>https://falasool.github.io/posts/read-understand-http/</guid><description>{\{&amp;lt; neodb &amp;quot;https://neodb.social/book/3BVOzAS5pkNSWDfRT5CMkn&amp;quot; &amp;gt;}\} 阅读笔记，讲得比较浅，结构有点散，但还是收获了一些 HTTP 协议 用于服务端和客户端之间的通信 // 请求报文： // 请求方法 + uri + 协议版本 + [请求首部</description></item><item><title>Vue|透传 Attrs</title><link>https://falasool.github.io/posts/vue-attrs/</link><pubDate>Fri, 01 Mar 2024 23:29:38 +0800</pubDate><guid>https://falasool.github.io/posts/vue-attrs/</guid><description>⭐️什么是透传 attrs？ 大小写不敏感 维持响应式 prop onUpdated() 成功传递给子组件（= 绑定到根元素），但子组件没有用 props 或 emits 声明的 attrs 或 v-on 事件监听器（eg. c</description></item><item><title>Figma</title><link>https://falasool.github.io/posts/figma/</link><pubDate>Sun, 05 Nov 2023 23:55:30 +0800</pubDate><guid>https://falasool.github.io/posts/figma/</guid><description>cheat sheet space 移动画布 control + 中键滚轮 缩放画布 右上角显示当前画布百分比 百分百显示 shift + 0 显示全部内容 shift + 1 只显示画布 command + \ 右下角 help and resources 》keyboard shortcuts</description></item><item><title>iTerm2 配置</title><link>https://falasool.github.io/posts/iterm2/</link><pubDate>Tue, 18 Jul 2023 18:41:59 +0800</pubDate><guid>https://falasool.github.io/posts/iterm2/</guid><description>SSH 远程连接配置 创建登录脚本 /.ssh/remote-login-vps.sh #!/usr/bin/expect set timeout 30 spawn ssh -p [lindex $argv 0] [lindex $argv 1]@[lindex $argv 2] expect { &amp;#34;(yes/no)?&amp;#34; {send &amp;#34;yes\n&amp;#34;;exp_continue} &amp;#34;password:&amp;#34; {send &amp;#34;[lindex $argv 3]\n&amp;#34;} } interact 授予执行权限 chmod +x remote-login-vps.sh 进入iTerm2 -&amp;gt; preference -&amp;gt; Profiles，</description></item><item><title>网络通信过程 + Vmess搭建</title><link>https://falasool.github.io/posts/about-dns-principle-and-vpn/</link><pubDate>Mon, 17 Jul 2023 21:31:10 +0800</pubDate><guid>https://falasool.github.io/posts/about-dns-principle-and-vpn/</guid><description>xxx</description></item><item><title>SQL 入门</title><link>https://falasool.github.io/posts/sql/</link><pubDate>Thu, 29 Jun 2023 19:13:22 +0800</pubDate><guid>https://falasool.github.io/posts/sql/</guid><description>常用命令 CREATE DATABASE test; # 创建数据库 CREATE TABLE t1(id int,body varchar(100)); # 创建表(记得使用\c命令切换数据库) CREATE USER test WITH PASSWORD &amp;#39;Test#1357&amp;#39;; # 创建用户 ALTER USER test WITH PASSWORD &amp;#39;Test#2468&amp;#39;; # 修改密码 ALTER USER test createdb; # 指定用户添加</description></item><item><title>初遇 PostgreSQL</title><link>https://falasool.github.io/posts/postgresql/</link><pubDate>Mon, 26 Jun 2023 11:21:32 +0800</pubDate><guid>https://falasool.github.io/posts/postgresql/</guid><description>以现有 Pleroma 数据库为基础学习 postgreSQL 本地安装 PG 用 Homebrew 安装 brew install postgresql@13 添加环境变量 # ~/.zshrc + # PostgreSQL + export PATH=&amp;#34;/opt/homebrew/Cellar/postgresql@13/13.11_1/bin:$PATH&amp;#34; + export PGDATA=&amp;#34;/opt/homebrew/var/postgresql@13&amp;#34; 让修改生效 &amp;amp; 测试 source ~/.zshrc # 对配置文件的修改生效 pg_ctl -V # 查看版本</description></item><item><title>Nginx</title><link>https://falasool.github.io/posts/nginx-memos/</link><pubDate>Tue, 11 Apr 2023 21:28:27 +0800</pubDate><guid>https://falasool.github.io/posts/nginx-memos/</guid><description/></item><item><title>Hugo | 给博客配置图床</title><link>https://falasool.github.io/posts/picture-bed/</link><pubDate>Fri, 21 Oct 2022 23:29:38 +0800</pubDate><guid>https://falasool.github.io/posts/picture-bed/</guid><description>安装 PicGo brew install picgo --cask 创建 GitHub 图床仓库 名称无所谓，记得勾选 README 生成令牌（Token） 在 Account-Settings-Developer Settings-Personal Access Tokens 下生成（勾选 repo）并保存 配置 PicGo 自定义域名是：https</description></item><item><title>Hugo | 给博客添加评论系统</title><link>https://falasool.github.io/posts/hugo-comment-system-disqusjs/</link><pubDate>Fri, 14 Oct 2022 19:12:42 +0800</pubDate><guid>https://falasool.github.io/posts/hugo-comment-system-disqusjs/</guid><description>Update：用过 Cataus、Disqus，Cataus 和同名主题配合起来很可爱，用了一段时间 Disqus 后对它的 UI 不太满意，再加上强制登录比较恼人</description></item><item><title>Hugo | Front Matter</title><link>https://falasool.github.io/posts/hugo-front-matter/</link><pubDate>Wed, 12 Oct 2022 20:08:18 +0800</pubDate><guid>https://falasool.github.io/posts/hugo-front-matter/</guid><description>什么是 Front Matter 是指 .md 文件最上面的这一部分内容 --- title: xxxxxx date: 2022-10-10 09:39:50 type: tags layout: tags= --- 每次执行 hugo new 命令新建文章时，Hugo 会从 ./archetypes 中寻找对应的 Front Matter 模板并自动添加到新建</description></item></channel></rss>