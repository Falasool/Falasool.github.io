<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Frontend on Falasool</title><link>https://falasool.github.io/categories/frontend/</link><description>Recent content in Frontend on Falasool</description><generator>Hugo -- gohugo.io</generator><lastBuildDate>Tue, 02 Apr 2024 19:41:35 +0800</lastBuildDate><atom:link href="https://falasool.github.io/categories/frontend/index.xml" rel="self" type="application/rss+xml"/><item><title>JS|原型链的理解</title><link>https://falasool.github.io/2024/prototype-chain/</link><pubDate>Tue, 02 Apr 2024 19:41:35 +0800</pubDate><guid>https://falasool.github.io/2024/prototype-chain/</guid><description>&lt;img src="https://cdn.jsdelivr.net/gh/Falasool/blog-pic-bed@main/blog202404101944461.jpg" alt="Featured image of post JS|原型链的理解" />&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/Falasool/blog-pic-bed@main/blog202404101944461.jpg"
loading="lazy"
alt="951712748932_.pic_hd"
>&lt;/p>
&lt;p>先上图&lt;/p>
&lt;h2 id="一些概念">一些概念&lt;/h2>
&lt;p>JS 中万物皆对象，分为普通对象和函数对象。&lt;/p>
&lt;p>每个对象都有一个私有属性 &lt;code>[[Prototype]]&lt;/code> ，私有属性指向原型 prototype，由于原型 prototype 也是对象，它会重复这一循环层层向上，直到一个对象的原型为 null&lt;/p>
&lt;p>&lt;code>__proto__&lt;/code> 是 &lt;code>[[Prototype]]&lt;/code> 的 getter/setter&lt;/p>
&lt;p>&lt;code>__proto__&lt;/code> 的 value 必须是对象/null&lt;/p>
&lt;p>原型链不能形成闭环&lt;/p>
&lt;h2 id="普通的原型链">普通的原型链&lt;/h2>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="kr">const&lt;/span> &lt;span class="nx">p&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nx">Parent&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>我声明了一个对象 p，p作为Parent的实例，能拿到Parent里预先定义的属性和方法，这就是&lt;!-- raw HTML omitted -->继承&lt;!-- raw HTML omitted -->&lt;/p>
&lt;p>&lt;code>p.__proto__ === Parent.prototype&lt;/code> ，&lt;code>__proto__&lt;/code> 像指针，指向实例继承的属性&amp;amp;方法&lt;/p>
&lt;p>&lt;code>Parent.prototype.constructor === Parent&lt;/code>，&lt;code>Parent.prototype&lt;/code>本身是Parent 的一个实例，反过来说， &lt;code>Parent.prototype&lt;/code>的构造器是Parent&lt;/p>
&lt;p>图中的虚线，p =====&amp;gt; Parent，因为&lt;code>p.constructor&lt;/code>实际上是从&lt;code>Parent.prototype&lt;/code>继承来的⬆️&lt;/p>
&lt;h2 id="js中的function-和-object">JS中的Function 和 Object&lt;/h2>
&lt;p>设计思想：高内聚、低耦合&lt;/p>
&lt;ul>
&lt;li>
&lt;p>Function的constructor是Function，所以&lt;code>Function.__proto__&lt;/code> 指向 &lt;code>Function.prototype&lt;/code>&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Object的constructor是Function&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>盘古开天地：先有 &lt;code>Object.prototype&lt;/code> ，再有 &lt;code>Function.prototype&lt;/code> ，再有 Function 和Object&lt;/p>
&lt;blockquote>
&lt;p>当我们说一个对象继承自某个 Constructor 时，其实我们是在说，从这个对象的原型链上找到了 Constructor.prototype。&lt;/p>
&lt;p>所以，Object.prototype 可以先于 Object 出现，然后用这个 prototype 构造出 Function.prototype，有了 Function.prototype 再构造出 Function ， Object 这几个构造器。然后把 Object.prototype 挂到 Object 上，Function.prototype 挂到Function 上。&lt;/p>
&lt;p>好比栗子中的 obj 构造自 p ，而 obj 构造出来之后，p 才挂到 A 上，我们说 obj 是 A 类型的，但是 obj 是用 A.prototype(就是 p ) 构造出来的。&lt;/p>
&lt;p>分析可得：全局下的 Object 构造自 Function.prototype， Function.prototype 构造自 Object.prototype。&lt;/p>
&lt;/blockquote>
&lt;h2 id="联系">联系&lt;/h2>
&lt;p>&lt;code>instanceof&lt;/code> 的原理：原型链（遍历目标的原型链，直到找到右边变量的 prototype）&lt;/p>
&lt;p>特殊情况：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">Function&lt;/span> &lt;span class="k">instanceof&lt;/span> &lt;span class="nb">Object&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// true
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">console&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">log&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">Object&lt;/span> &lt;span class="k">instanceof&lt;/span> &lt;span class="nb">Function&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// true
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>Object的构造器是Function，同时JS中万物皆对象💦&lt;/p>
&lt;h2 id="参考--致谢">参考 &amp;amp; 致谢&lt;/h2>
&lt;p>&lt;a class="link" href="https://segmentfault.com/a/1190000021232132" target="_blank" rel="noopener"
>https://segmentfault.com/a/1190000021232132&lt;/a>
&lt;span style="white-space: nowrap;">&lt;svg width=".7em" height=".7em" viewBox="0 0 21 21"
xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;a class="link" href="https://zhuanlan.zhihu.com/p/84876191" target="_blank" rel="noopener"
>https://zhuanlan.zhihu.com/p/84876191&lt;/a>
&lt;span style="white-space: nowrap;">&lt;svg width=".7em" height=".7em" viewBox="0 0 21 21"
xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;a class="link" href="https://juejin.cn/post/7057544558057357348" target="_blank" rel="noopener"
>https://juejin.cn/post/7057544558057357348&lt;/a>
&lt;span style="white-space: nowrap;">&lt;svg width=".7em" height=".7em" viewBox="0 0 21 21"
xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/p></description></item><item><title>无障碍化 Accessibility</title><link>https://falasool.github.io/2024/a11y/</link><pubDate>Thu, 21 Mar 2024 20:28:27 +0800</pubDate><guid>https://falasool.github.io/2024/a11y/</guid><description>&lt;p>什么是 Accessibility？&lt;/p>
&lt;ul>
&lt;li>以任何方式访问网络的用户（移动端、电视、手表&amp;hellip;），无论听觉、视觉、身体和认知能力如何（视障、听障、运动功能障碍&amp;hellip;），应用程序都是可以理解和使用的&lt;/li>
&lt;li>网站不应该造成伤害（诱发光敏性癫痫等）&lt;/li>
&lt;/ul>
&lt;p>可以从什么方面作出努力？&lt;/p>
&lt;h2 id="html">HTML&lt;/h2>
&lt;p>语义化结构&lt;/p>
&lt;ol>
&lt;li>&lt;code>&amp;lt;button&amp;gt; vs &amp;lt;div&amp;gt;&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>提供了默认样式、提供了键盘的无障碍（tab 键更换按钮、enter 键点击按钮）&lt;/p>
&lt;ol start="2">
&lt;li>&lt;code>&amp;lt;h1&amp;gt; &amp;lt;h2&amp;gt; &amp;lt;p&amp;gt; vs &amp;lt;font&amp;gt; &amp;lt;br&amp;gt; &amp;lt;hr&amp;gt; &amp;lt;i&amp;gt;&lt;/code>&lt;/li>
&lt;/ol>
&lt;p>便于屏幕阅读器识别标题和段落结构 🆚 没有任何可定位的标记的一大坨&lt;/p>
&lt;ol start="3">
&lt;li>替代文本&lt;/li>
&lt;/ol>
&lt;ul>
&lt;li>
&lt;p>&lt;code>alt=&amp;quot;&amp;quot;&lt;/code> 属性，包含对图像的描述，向无法看到/听到某些内容的用户传达其含义和内容。如果 alt 为空，表示该图像只用于装饰（或 &lt;code>role =“presentation”&lt;/code> 阻止辅助设备读出替代文本）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>title&lt;/code> 属性，屏幕阅读器也会读出 title 的内容&lt;/p>
&lt;/li>
&lt;li>
&lt;p>&lt;code>&amp;lt;track&amp;gt;&lt;/code> 元素向视频/音频添加文本轨道&lt;/p>
&lt;/li>
&lt;/ul>
&lt;ol start="4">
&lt;li>提供元素之间的联系和上下文，例如 &lt;code>&amp;lt;label for=&amp;quot;&amp;quot;&amp;gt;&amp;lt;input&amp;gt;&lt;/code>&lt;/li>
&lt;/ol>
&lt;h3 id="wai-aria-属性">WAI-ARIA 属性&lt;/h3>
&lt;p>当原生 HTML 元素无法满足需求时，考虑 ARIA（Accessible Rich Internet Applications）属性，帮助解读网页结构和交互方式&lt;/p>
&lt;ul>
&lt;li>aria-hidden：表示是否对辅助技术隐藏该元素&lt;/li>
&lt;li>role：制定元素的角色&lt;/li>
&lt;li>aria-labelledby：父节点设置，会链接到对应 id 的元素，方便把分散在多个 DOM，逻辑上属于一个整体的内容打包阅读&lt;/li>
&lt;/ul>
&lt;h2 id="css">CSS&lt;/h2>
&lt;p>要确保无 css 的情况下，内容可读，顺序有意义&lt;/p>
&lt;h3 id="颜色及对比度">颜色及对比度&lt;/h3>
&lt;p>WebAIM 的 &lt;a class="link" href="https://webaim.org/resources/contrastchecker/" target="_blank" rel="noopener"
>Color Contrast Checker&lt;/a>
&lt;span style="white-space: nowrap;">&lt;svg width=".7em" height=".7em" viewBox="0 0 21 21"
xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
之类的工具来检查方案是否有足够对比度&lt;/p>
&lt;h3 id="隐藏的内容">隐藏的内容&lt;/h3>
&lt;p>&lt;code>position: absolute&lt;/code> 好于 &lt;code>visibility: hidden; display: none;&lt;/code> ，前者不阻止屏幕阅读器读取被隐藏的内容&lt;/p>
&lt;h2 id="javascript">JavaScript&lt;/h2>
&lt;p>结构交给 HTML，尽量不使用 JS 配合 &lt;code>&amp;lt;div&amp;gt;&lt;/code> 伪造功能（unobtrusive 原则）&lt;/p>
&lt;h3 id="焦点管理">焦点管理&lt;/h3>
&lt;p>相比较&lt;code>&amp;lt;button&amp;gt;&amp;lt;a&amp;gt;&lt;/code> 这样自带语义的元素，&lt;code>&amp;lt;div&amp;gt;&lt;/code> 不能用&lt;code>.foucs()&lt;/code> ，需要配合&lt;code>tabindex=&amp;quot;-1&amp;quot;&lt;/code> 属性，和&lt;code>.pop:focus-visible {outline: 0}&lt;/code>&lt;/p>
&lt;ol>
&lt;li>场景是现在很常见的单页面里，进行路由切换/ajax 更改内容时，进行焦点重置，让辅助阅读设备重头开始读，方便视障人士&lt;/li>
&lt;/ol>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="line">&lt;span class="cl">&amp;lt;nav&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;a href=&amp;#34;/&amp;#34;&amp;gt;Home&amp;lt;/a&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;a href=&amp;#34;/goods&amp;#34;&amp;gt;goods&amp;lt;/a&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &amp;lt;a href=&amp;#34;/user&amp;#34;&amp;gt;user&amp;lt;/a&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/nav&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;main&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">+ // tabindex=&amp;#34;-1&amp;#34;，元素可聚焦，不可通过键盘导航访问
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">+ &amp;lt;h2 tabindex=&amp;#34;-1&amp;#34;&amp;gt;商城&amp;lt;/h2&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">&lt;/span> &amp;lt;Link /&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&amp;lt;/main&amp;gt;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">+ &amp;lt;script&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">+ function routerChange() {
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">+ const heading = document.querySelector(&amp;#39;h2&amp;#39;)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">+ heading.focus()
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">+ document.title = heading.textContent
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">+ }
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">+ &amp;lt;/script&amp;gt;
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;ol start="2">
&lt;li>Dialog 配合 A11y&lt;/li>
&lt;/ol>
&lt;p>需求：弹窗打开时聚焦于弹窗上，限制对页面其他元素的访问，退出弹窗时焦点退回到之前的位置&lt;/p>
&lt;p>给弹窗增加 aria 属性&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-html" data-lang="html">&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">section&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">id&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;alert-dialog&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">role&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;dialog&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">aria-modal&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;true&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">aria-label&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;home-dialog&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="na">tanindex&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s">&amp;#34;-1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>TITLE&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">h2&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ...
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">&amp;lt;&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;&amp;lt;/&lt;/span>&lt;span class="nt">button&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">&amp;lt;/&lt;/span>&lt;span class="nt">section&lt;/span>&lt;span class="p">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>转移焦点&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">function&lt;/span> &lt;span class="nx">showSelfAlert&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 获取目标元素
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">mask&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">querySelector&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;.mask&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 显示弹窗
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">mask&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">style&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">display&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;block&amp;#39;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 等待DOM更新，在下一个事件循环时
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">setTimeout&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kd">function&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 设置焦点到遮罩层或弹窗的元素上
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">dialog&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;aria-mask-dialog&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">dialog&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">dialog&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">focus&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">},&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">section&lt;/span> &lt;span class="nx">aria&lt;/span>&lt;span class="o">-&lt;/span>&lt;span class="nx">live&lt;/span>&lt;span class="o">=&lt;/span>&lt;span class="s2">&amp;#34;polite&amp;#34;&lt;/span>&lt;span class="o">&amp;gt;&amp;lt;&lt;/span>&lt;span class="err">/section&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// aria-live 默认属性为off，
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// polite 在系统空闲时朗读
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// assertive 立刻阅读
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>限制焦点&lt;/p>
&lt;ul>
&lt;li>使用 event capturing 监听 focus 事件，处理阶段：捕获-目标-冒泡&lt;/li>
&lt;/ul>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;focus&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kd">function&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">dialog&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getElementById&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;dialog&amp;#39;&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">dialogOpen&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="o">!&lt;/span>&lt;span class="nx">dialog&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">contains&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">target&lt;/span>&lt;span class="p">)){&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">stopPropagation&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">dialog&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">focus&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>打开弹窗前记录最后一个焦点元素，结束后把焦点挂回去&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 获取当前聚焦的元素
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="kd">let&lt;/span> &lt;span class="nx">lastFouceElement&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">activeElement&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// close dialog
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">lastFouceElement&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">focus&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="参考致谢">参考&amp;amp;致谢&lt;/h2>
&lt;p>&lt;a class="link" href="https://developer.mozilla.org/zh-CN/docs/Learn/Accessibility" target="_blank" rel="noopener"
>https://developer.mozilla.org/zh-CN/docs/Learn/Accessibility&lt;/a>
&lt;span style="white-space: nowrap;">&lt;svg width=".7em" height=".7em" viewBox="0 0 21 21"
xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/p>
&lt;p>&lt;a class="link" href="https://juejin.cn/post/7133617403748941861" target="_blank" rel="noopener"
>Web如何适配无障碍？&lt;/a>
&lt;span style="white-space: nowrap;">&lt;svg width=".7em" height=".7em" viewBox="0 0 21 21"
xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/p></description></item><item><title>Html5|新特性PushState</title><link>https://falasool.github.io/2024/html5-pushstate/</link><pubDate>Tue, 12 Mar 2024 19:39:03 +0800</pubDate><guid>https://falasool.github.io/2024/html5-pushstate/</guid><description>&lt;h2 id="history">History&lt;/h2>
&lt;p>&lt;code>history.pushState()&lt;/code> 是什么？简单来说，是目前浏览器已经普遍支持的一种添加浏览历史记录的方法。&lt;/p>
&lt;p>首先，让我们来看看 &lt;code>history&lt;/code> 对象，它保存了当前窗口访问过的所有页面网址&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// Console
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="o">&amp;gt;&lt;/span> &lt;span class="nx">history&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">History&lt;/span> &lt;span class="p">{&lt;/span>&lt;span class="nx">length&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="mi">3&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">scrollRestoration&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="s1">&amp;#39;auto&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">state&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">pushState&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">ƒ&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">replaceState&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nx">ƒ&lt;/span>&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>length &amp;amp; go/forward/back&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">history&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">length&lt;/span> &lt;span class="c1">// 3，当前窗口访问过三个地址（包括当前地址）
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">// 浏览器的前进/后退按钮的实际操作（从browser cache中加载），以下两者等同
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">history&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">back&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1">// history.go(-1)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">history&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">forward&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="c1">// history.go(1)
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span>&lt;span class="nx">history&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">go&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">// default 为 0，刷新当前页面
&lt;/span>&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>scrollRestoration&lt;/p>
&lt;p>滚动恢复行为：auto/manual 恢复到用户之前滚动到的地方/不管（&lt;/p>
&lt;h3 id="pushstate">pushState&lt;/h3>
&lt;p>向历史中添加一条记录（state对象，新页面标题，新的地址）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">history&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">pushState&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">title&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">url&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>参数：&lt;/p>
&lt;ul>
&lt;li>state：popstate事件触发时（back、go、forward前进后退会触发），state对象会传入回调参数，那么popstate的属性state就会包含当前历史记录的state对象的一个copy，储存在磁盘里，当浏览器重启时可以恢复（&amp;lt; 16MiB），更多空间的话建议使用 sessionStorage / localStorage&lt;/li>
&lt;li>title：新网址title&lt;/li>
&lt;li>url：新网址url&lt;/li>
&lt;/ul>
&lt;p>🙋 那我为什么用 pushState不用 &lt;code>window.location = '#foo'&lt;/code>呢？&lt;/p>
&lt;p>pushState的优点：&lt;/p>
&lt;ul>
&lt;li>
&lt;p>跳转后页面不会发起新的文档请求&lt;/p>
&lt;/li>
&lt;li>
&lt;p>新URL可以是和当前URL同源(跨域报错）的任意URL，浏览器添加history记录但是并不真的加载，也就是说假的也没事&lt;/p>
&lt;/li>
&lt;li>
&lt;p>push的历史记录可以关联任意数据，基于hash值的话，必须将相关数据编码到一个短字符串里&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>等等，&lt;code>popstate&lt;/code> 事件能讲讲吗？&lt;/p>
&lt;h3 id="popstate事件">popstate事件&lt;/h3>
&lt;p>处于激活状态的历史记录条目发生变化时（调用go/forward/back），popstate就会在对应的window对象上触发。popstate的对调函数的参数event.state指向pushState的state&lt;/p>
&lt;p>if 这个历史记录是用 &lt;code>pushState&lt;/code> 或&lt;code>replaceState&lt;/code> 操作过的，不会触发popstate事件&lt;/p>
&lt;p>⭐️ 应用：用户要离开当前页面时popup做二次确认（beforeunload）&lt;/p>
&lt;p>监听 popstate事件，一旦被触发，添加1条记录&lt;code>history.pushState(null, null, document.URL)&lt;/code> 留在当前页面&lt;/p>
&lt;blockquote>
&lt;p>当popstate被触发时，记录已经回退了。在回退之前再添加一条当前url的记录，以保证回退后url不变&lt;/p>
&lt;/blockquote>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">history&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">pushState&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="s1">&amp;#39;/a&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">addEventListener&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;popstate&amp;#39;&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="p">()&lt;/span> &lt;span class="p">=&amp;gt;&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">alert&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="s1">&amp;#39;您确认要离开吗？&amp;#39;&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">})&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="nx">history&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">pushState&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="kc">null&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nb">document&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">URL&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>⭐️ 应用：用户想从A页面进入一个无权限查看的地址B，让用户跳转到error.html C，用户返回时直接从C-&amp;gt;A&lt;/p>
&lt;p>在B向C跳转时，使用&lt;code>history.replace&lt;/code> 把B替换为C，这样记录就从A-B-C变成，A-C。在C页面back直接回到A&lt;/p>
&lt;h3 id="windowlocation">window.location&lt;/h3>
&lt;p>&lt;a class="link" href="https://www.w3schools.com/js/js_window_location.asp" target="_blank" rel="noopener"
>https://www.w3schools.com/js/js_window_location.asp&lt;/a>
&lt;span style="white-space: nowrap;">&lt;svg width=".7em" height=".7em" viewBox="0 0 21 21"
xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/p>
&lt;h3 id="replacestate">replaceState&lt;/h3>
&lt;p>修改当前的历史记录项&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">window&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">history&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">replaceState&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">state&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">title&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">url&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>🎉 醋来了：&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">html&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">head&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">title&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="nx">wait&lt;/span> &lt;span class="mi">10&lt;/span> &lt;span class="nx">sec&lt;/span> &lt;span class="nx">and&lt;/span> &lt;span class="nx">BOOM&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/title&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/head&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">body&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">h1&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>&lt;span class="err">🚀&lt;/span>&lt;span class="nx">抓紧&lt;/span>&lt;span class="err">，&lt;/span>&lt;span class="nx">要上天了&lt;/span>&lt;span class="err">！🚀&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/h1&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="nx">script&lt;/span>&lt;span class="o">&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s2">&amp;#34;&amp;#34;&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">for&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="kd">var&lt;/span> &lt;span class="nx">i&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="mi">1000000&lt;/span>&lt;span class="p">;&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="o">++&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">total&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">total&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">i&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">toString&lt;/span>&lt;span class="p">();&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">history&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">pushState&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="mi">0&lt;/span>&lt;span class="p">,&lt;/span>&lt;span class="nx">total&lt;/span>&lt;span class="p">);&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/script&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/body&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">&amp;lt;&lt;/span>&lt;span class="err">/html&amp;gt;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>向你的浏览器历史里塞进 1000000 条记录😂 （雾&lt;/p>
&lt;p>这段代码来自 &lt;a class="link" href="https://twitter.com/fatih_svml/status/689070600653041664" target="_blank" rel="noopener"
>Fatih Sevimli&lt;/a>
&lt;span style="white-space: nowrap;">&lt;svg width=".7em" height=".7em" viewBox="0 0 21 21"
xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/p>
&lt;p>来都来了复习一下：&lt;/p>
&lt;h2 id="sessionstorage-vs-localstorage">sessionStorage vs localStorage&lt;/h2>
&lt;p>while data in localStorage doesn&amp;rsquo;t expire, data in sessionStorage is cleared when the page session ends.&lt;/p>
&lt;table>
&lt;thead>
&lt;tr>
&lt;th>🍪cookie&lt;/th>
&lt;th>session&lt;/th>
&lt;/tr>
&lt;/thead>
&lt;tbody>
&lt;tr>
&lt;td>储存在客户端&lt;/td>
&lt;td>服务器端&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>ASCII&lt;/td>
&lt;td>任意&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>实效长&lt;/td>
&lt;td>短&lt;/td>
&lt;/tr>
&lt;tr>
&lt;td>4k&lt;/td>
&lt;td>高&lt;/td>
&lt;/tr>
&lt;/tbody>
&lt;/table>
&lt;p>&lt;a class="link" href="https://www.cnblogs.com/ityouknow/p/10856177.html" target="_blank" rel="noopener"
>你真的了解cookie和session吗&lt;/a>
&lt;span style="white-space: nowrap;">&lt;svg width=".7em" height=".7em" viewBox="0 0 21 21"
xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/p>
&lt;h2 id="参考--致谢">参考 &amp;amp; 致谢&lt;/h2>
&lt;p>&lt;a class="link" href="https://javascript.ruanyifeng.com/bom/history.html" target="_blank" rel="noopener"
>https://javascript.ruanyifeng.com/bom/history.html&lt;/a>
&lt;span style="white-space: nowrap;">&lt;svg width=".7em" height=".7em" viewBox="0 0 21 21"
xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/p>
&lt;p>&lt;a class="link" href="https://juejin.cn/post/6948746074504986655" target="_blank" rel="noopener"
>[高级]深入浅出浏览器的history对象&lt;/a>
&lt;span style="white-space: nowrap;">&lt;svg width=".7em" height=".7em" viewBox="0 0 21 21"
xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/p></description></item><item><title>Vue | Note | Monster Slayer Game</title><link>https://falasool.github.io/2023/vuejs-monster-slayer/</link><pubDate>Thu, 31 Aug 2023 15:25:38 +0800</pubDate><guid>https://falasool.github.io/2023/vuejs-monster-slayer/</guid><description>&lt;ul>
&lt;li>&lt;a class="link" href="https://monster-slayer.ponder.lol/" target="_blank" rel="noopener"
>Live Deploy&lt;/a>
&lt;span style="white-space: nowrap;">&lt;svg width=".7em" height=".7em" viewBox="0 0 21 21"
xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/li>
&lt;li>&lt;a class="link" href="https://github.com/Falasool/vuejs-monster-slayer" target="_blank" rel="noopener"
>Github 仓库&lt;/a>
&lt;span style="white-space: nowrap;">&lt;svg width=".7em" height=".7em" viewBox="0 0 21 21"
xmlns="http://www.w3.org/2000/svg">
&lt;path d="m13 3l3.293 3.293l-7 7l1.414 1.414l7-7L21 11V3z" fill="currentColor" />
&lt;path d="M19 19H5V5h7l-2-2H5c-1.103 0-2 .897-2 2v14c0 1.103.897 2 2 2h14c1.103 0 2-.897 2-2v-5l-2-2v7z"
fill="currentColor">
&lt;/svg>&lt;/span>
&lt;/li>
&lt;/ul>
&lt;h2 id="写静态页面">写静态页面&lt;/h2>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/Falasool/blog-pic-bed@main//blog202308290007098.webp"
loading="lazy"
alt="image"
>&lt;/p>
&lt;h2 id="实现功能">实现功能&lt;/h2>
&lt;h3 id="点击-attack-怪兽血量下降随机数值">点击 ATTACK 怪兽血量下降随机数值&lt;/h3>
&lt;p>⭐️ 最关键的：随机数值。
所以 &lt;code>Math.floor(Math.random() * (15 - 10) + 10)&lt;/code>，即『生成 [10,15) 范围内的随机浮点数并向下取整』。因为有好几种类型的攻击都要用到这个方法，所以把它提出来:&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">function&lt;/span> &lt;span class="nx">getRandomValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">n&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="nx">m&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nb">Math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">floor&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nb">Math&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">random&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">m&lt;/span> &lt;span class="o">-&lt;/span> &lt;span class="nx">n&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">n&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>⭐️ 设定初始健康值 monsterHealth 为 100&lt;/p>
&lt;p>⭐️ 绑定点击事件 &lt;code>@click=“attackMonster”&lt;/code>，每次点击摇出一个随机伤害值&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">attackMonster&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">attackValue&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">getRandomValue&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="mi">5&lt;/span>&lt;span class="p">,&lt;/span> &lt;span class="mi">12&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">monsterHealth&lt;/span> &lt;span class="o">-=&lt;/span> &lt;span class="nx">attackValue&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>⭐️ 给 health process 动态绑定属性 &lt;code>:style=&amp;quot;monsterBarStyle&amp;quot;&lt;/code>，写计算属性 monsterBarStyle&lt;/p>
&lt;p>⭐️ 注意：1️⃣this2️⃣ 模板字符串,可以内嵌变量和表达式 3️⃣${damage} 是模板字符串中嵌入的一个变量 4️⃣scaleX() 是 CSS transform 的一个方法,用于缩放元素的宽度&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">monsterBarStyle&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kr">const&lt;/span> &lt;span class="nx">damage&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">monsterHealth&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">100&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="p">{&lt;/span> &lt;span class="nx">transform&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="sb">`scaleX(&lt;/span>&lt;span class="si">${&lt;/span>&lt;span class="nx">damage&lt;/span>&lt;span class="si">}&lt;/span>&lt;span class="sb">)`&lt;/span> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="攻击怪兽后被反击">攻击怪兽后被反击&lt;/h3>
&lt;p>⭐️ 『攻击降血条』的逻辑一样。在 attackMonster() 里调用 attackKnight()&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">attackMonster&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// ……………… //
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="c1">// 怪兽反击
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">attackKnight&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="特殊攻击">特殊攻击&lt;/h3>
&lt;p>⭐️ 每三次普通攻击/治疗攒够一个蓝条，这时 special attack 才能用。其它时间按扭灰色不起作用 ==&amp;gt; 用 css 伪类 &lt;code>:disabled&lt;/code> 实现&lt;/p>
&lt;p>⭐️ 每次调用普攻和治疗时 currentRound + 1（default = 0），当 currentRound 积累到 3 时 &lt;code>:disabled&lt;/code> 失效&lt;/p>
&lt;p>⭐️ 设置一个 computed，用于控制 &lt;code>:disabled&lt;/code>，攒够蓝条但不用大招也没关系, btn 会保持 active&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">mayUseSpecialAttack&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">currentRound&lt;/span> &lt;span class="o">/&lt;/span> &lt;span class="mi">3&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">1&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>⭐️ 通过 v-bind 动态绑定给 btn: &lt;code>：style=&amp;quot;mayUseSpecialAttack&amp;quot;&lt;/code>&lt;/p>
&lt;p>⭐️ 使用大招后蓝条清空重新开始计数&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl"> &lt;span class="nx">specialAttackMonster&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">event&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="c1">// 使用大招后蓝条清空，重新积累
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="nx">event&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">target&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">style&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">disabled&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="kc">true&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">currentRound&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="mi">0&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">},&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="点击-heal-治疗自己随机数值怪兽发起攻击">点击 HEAL 治疗自己随机数值，怪兽发起攻击&lt;/h3>
&lt;p>⭐️ 和普通攻击的逻辑一致，只不过变成 +=&lt;/p>
&lt;p>⭐️ knightHealth 不能超过上限 100&lt;/p>
&lt;h3 id="投降">投降&lt;/h3>
&lt;p>给 knightHealth 赋值为 0&lt;/p>
&lt;h3 id="玩家输入昵称">玩家输入昵称&lt;/h3>
&lt;p>⭐️ 输入昵称前隐藏 input 以下的结构 v-if&lt;/p>
&lt;p>⭐️ 用 v-model 双向绑定 input 和 value&lt;/p>
&lt;h3 id="监视比赛结果">监视比赛结果&lt;/h3>
&lt;p>⭐️ watch 属性用于监视 data()里的数据&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-Vue" data-lang="Vue">&lt;span class="line">&lt;span class="cl">&lt;span class="nx">knightHealth&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">value&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">value&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">0&lt;/span> &lt;span class="o">&amp;amp;&amp;amp;&lt;/span> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">monsterHealth&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">winner&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;draw&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span> &lt;span class="k">else&lt;/span> &lt;span class="k">if&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">value&lt;/span> &lt;span class="o">&amp;lt;=&lt;/span> &lt;span class="mi">0&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">this&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">winner&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="s1">&amp;#39;monster&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="显示比赛结果">显示比赛结果&lt;/h3>
&lt;ul>
&lt;li>v-if&lt;/li>
&lt;li>v-else-if&lt;/li>
&lt;li>v-else&lt;/li>
&lt;/ul>
&lt;p>联合使用显示对应的比赛结果&lt;/p>
&lt;h3 id="battle-log">battle log&lt;/h3>
&lt;p>⭐️ 设置 &lt;code>data(){logs:[]}&lt;/code>&lt;/p>
&lt;p>⭐️ 设置 methods addLogs(){}&lt;/p>
&lt;p>⭐️ 每次攻击 / 治愈时调用 addLogs(),这样战斗数据就传入 logs array 了&lt;/p>
&lt;p>⭐️ 用 v-for 遍历把 log 排列出来，用 currentTime() 作为索引&lt;/p>
&lt;p>⭐️ 时间戳转换为可读的时间格式&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-js" data-lang="js">&lt;span class="line">&lt;span class="cl">&lt;span class="kd">function&lt;/span> &lt;span class="nx">currentTime&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">date&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">date&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="k">new&lt;/span> &lt;span class="nb">Date&lt;/span>&lt;span class="p">(&lt;/span>&lt;span class="nx">date&lt;/span> &lt;span class="o">*&lt;/span> &lt;span class="mi">1000&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="c1">//如果date为13位不需要乘1000
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="c1">&lt;/span> &lt;span class="kd">var&lt;/span> &lt;span class="nx">Y&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">date&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getFullYear&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;-&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">M&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nx">date&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getMonth&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">10&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">?&lt;/span> &lt;span class="s1">&amp;#39;0&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">date&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getMonth&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">:&lt;/span> &lt;span class="nx">date&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getMonth&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="mi">1&lt;/span>&lt;span class="p">)&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;-&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">D&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">date&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getDate&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">10&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s1">&amp;#39;0&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">date&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getDate&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="nx">date&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getDate&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39; &amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">h&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="p">(&lt;/span>&lt;span class="nx">date&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getHours&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">10&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s1">&amp;#39;0&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">date&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getHours&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="nx">date&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getHours&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;:&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">m&lt;/span> &lt;span class="o">=&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="p">(&lt;/span>&lt;span class="nx">date&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getMinutes&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">10&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s1">&amp;#39;0&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">date&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getMinutes&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="nx">date&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getMinutes&lt;/span>&lt;span class="p">())&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="s1">&amp;#39;:&amp;#39;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="kd">var&lt;/span> &lt;span class="nx">s&lt;/span> &lt;span class="o">=&lt;/span> &lt;span class="nx">date&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getSeconds&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">&amp;lt;&lt;/span> &lt;span class="mi">10&lt;/span> &lt;span class="o">?&lt;/span> &lt;span class="s1">&amp;#39;0&amp;#39;&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">date&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getSeconds&lt;/span>&lt;span class="p">()&lt;/span> &lt;span class="o">:&lt;/span> &lt;span class="nx">date&lt;/span>&lt;span class="p">.&lt;/span>&lt;span class="nx">getSeconds&lt;/span>&lt;span class="p">()&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="k">return&lt;/span> &lt;span class="nx">Y&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">M&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">D&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">h&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">m&lt;/span> &lt;span class="o">+&lt;/span> &lt;span class="nx">s&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="restart-按扭">restart 按扭&lt;/h3>
&lt;p>把 data(){} 里的各项数据重置&lt;/p>
&lt;h3 id="适应小屏幕">适应小屏幕&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="p">@&lt;/span>&lt;span class="k">media&lt;/span> &lt;span class="o">(&lt;/span>&lt;span class="nt">max-width&lt;/span>&lt;span class="o">:&lt;/span> &lt;span class="nt">393px&lt;/span>&lt;span class="o">)&lt;/span> &lt;span class="p">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">...&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div></description></item><item><title>Vue3 | ToDoList</title><link>https://falasool.github.io/2023/vue3-todolist/</link><pubDate>Wed, 21 Jun 2023 01:29:15 +0800</pubDate><guid>https://falasool.github.io/2023/vue3-todolist/</guid><description>&lt;h2 id="实现功能">实现功能&lt;/h2>
&lt;ul>
&lt;li>
&lt;p>展示任务的列表&lt;/p>
&lt;ul>
&lt;li>使用 &lt;code>v-for&lt;/code> 在模板中循环渲染任务项组件，并根据任务的状态（完成或未完成）进行不同的展示样式&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>新增 todo&lt;/p>
&lt;ul>
&lt;li>&lt;code>v-model&lt;/code> 实现输入框和数据的双向绑定&lt;/li>
&lt;/ul>
&lt;/li>
&lt;li>
&lt;p>修改 todo&lt;/p>
&lt;/li>
&lt;li>
&lt;p>删除 todo&lt;/p>
&lt;/li>
&lt;li>
&lt;p>全选/取消全选&lt;/p>
&lt;/li>
&lt;li>
&lt;p>统计任务&lt;/p>
&lt;/li>
&lt;li>
&lt;p>隐藏已完成 todo&lt;/p>
&lt;/li>
&lt;li>
&lt;p>本地储存&lt;/p>
&lt;/li>
&lt;/ul>
&lt;p>进阶&lt;/p>
&lt;ol>
&lt;li>編輯 List 順序&lt;/li>
&lt;li>將完成的項目移至Finish區域，並且將字體改成刪除線效果&lt;/li>
&lt;li>增加 Icon 以及開場動畫&lt;/li>
&lt;li>設定日期與時間推播&lt;/li>
&lt;/ol>
&lt;h2 id="项目安装">项目安装&lt;/h2>
&lt;p>用 npm 和 vite 新建项目&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">npm init vite-app ToDoList
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>进入项目、安装依赖、启动&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">&lt;span class="nb">cd&lt;/span> ToDoList
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm install
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">npm run dev
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h3 id="工程目录结构">工程目录结构&lt;/h3>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-shell" data-lang="shell">&lt;span class="line">&lt;span class="cl">.
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── index.html
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── node_modules &lt;span class="c1"># 项目依赖&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── package-lock.json
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── package.json &lt;span class="c1"># 存放依赖包管理及命令管理信息文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">├── public
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">│   └── favicon.ico
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">└── src &lt;span class="c1"># 存放vue文件&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── App.vue &lt;span class="c1"># 项目的root组件，用来引入其它模块&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── assets
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── components &lt;span class="c1"># 存放自定义的公共组件（=非路由组件）&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> │   └── Helloworld.vue
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> ├── index.css
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> └── main.js &lt;span class="c1"># 入口文件，用于初始化vue实例&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;h2 id="思路">思路&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>先搭建好框架：写死数据看页面效果并调整&lt;/p>
&lt;/li>
&lt;li>
&lt;p>然后把代码拆分进三个组件：Header、List、Footer（标题和任务输入框、任务列表项、按钮选择项和计数）&lt;/p>
&lt;/li>
&lt;li>
&lt;p>写JS，并更换模板页面中的数据，用动态的数据代替。在setup()入口函数中写数据源和要实现功能的函数&lt;/p>
&lt;/li>
&lt;/ol>
&lt;h2 id="实现步骤">实现步骤&lt;/h2>
&lt;h3 id="html">HTML&lt;/h3>
&lt;p>这不是最终结构，后面有修改&lt;/p>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/Falasool/blog-pic-bed@main//blog202307121504274.webp"
loading="lazy"
alt="image"
>&lt;/p>
&lt;h3 id="css">CSS&lt;/h3>
&lt;details>
&lt;summary>安装和配置 TailwindCSS&lt;/summary>
&lt;p>在Vue的根目录下，安装 Tailwind 及其依赖项（PostCSS &amp;amp; auto-prefixer）&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">npm install -D tailwindcss postcss autoprefixer
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>生成配置文件并添加所有模板文件的路径&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-bash" data-lang="bash">&lt;span class="line">&lt;span class="cl">npx tailwindcss init -p
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">//tailwind.config.js
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">module.exports &lt;span class="o">=&lt;/span> &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> content: &lt;span class="o">[&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;./index.html&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="s2">&amp;#34;./src/**/*.{vue,js,ts,jsx,tsx}&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">]&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> theme: &lt;span class="o">{&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> extend: &lt;span class="o">{}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> &lt;span class="o">}&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl"> plugins: &lt;span class="o">[]&lt;/span>,
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="o">}&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>创建一个&lt;code>tailwind.css&lt;/code>样式文件，用于初始化并引入&lt;code>tailwindcss&lt;/code>的基础样式&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-css" data-lang="css">&lt;span class="line">&lt;span class="cl">&lt;span class="nt">复制代码&lt;/span>&lt;span class="c">/* /src/tailwindcss.css*/&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">@&lt;/span>&lt;span class="k">tailwind&lt;/span> &lt;span class="nt">base&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">@&lt;/span>&lt;span class="k">tailwind&lt;/span> &lt;span class="nt">components&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="p">@&lt;/span>&lt;span class="k">tailwind&lt;/span> &lt;span class="nt">utilities&lt;/span>&lt;span class="p">;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>&lt;p>导入&lt;code>css/tailwindcss.css&lt;/code>到&lt;code>main.js&lt;/code>&lt;/p>
&lt;div class="highlight">&lt;pre tabindex="0" class="chroma">&lt;code class="language-diff" data-lang="diff">&lt;span class="line">&lt;span class="cl">// src/main.js
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">import { createApp } from &amp;#39;vue&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">import App from &amp;#39;./App.vue&amp;#39;
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">+ import &amp;#34;./tailwind.css&amp;#34;
&lt;/span>&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">&lt;span class="gi">&lt;/span>
&lt;/span>&lt;/span>&lt;span class="line">&lt;span class="cl">createApp(App).mount(&amp;#39;#app&amp;#39;)
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/div>
&lt;/details>
&lt;p>&lt;img src="https://cdn.jsdelivr.net/gh/Falasool/blog-pic-bed@main//blog202308290007098.webp"
loading="lazy"
alt="image"
>&lt;/p></description></item></channel></rss>