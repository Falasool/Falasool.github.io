<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Frontend on Falasool</title><link>https://falasool.github.io/categories/frontend/</link><description>Recent content in Frontend on Falasool</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><copyright>© Falaool</copyright><lastBuildDate>Tue, 02 Apr 2024 19:41:35 +0800</lastBuildDate><atom:link href="https://falasool.github.io/categories/frontend/index.xml" rel="self" type="application/rss+xml"/><item><title>JS|原型链的理解</title><link>https://falasool.github.io/posts/prototype-chain/</link><pubDate>Tue, 02 Apr 2024 19:41:35 +0800</pubDate><guid>https://falasool.github.io/posts/prototype-chain/</guid><description>先上图 一些概念 JS 中万物皆对象，分为普通对象和函数对象。 每个对象都有一个私有属性 [[Prototype]] ，私有属性指向原型 prototype，由于原型 prototype 也是对象，它</description></item><item><title>无障碍化 Accessibility</title><link>https://falasool.github.io/posts/a11y/</link><pubDate>Thu, 21 Mar 2024 20:28:27 +0800</pubDate><guid>https://falasool.github.io/posts/a11y/</guid><description>什么是 Accessibility？ 以任何方式访问网络的用户（移动端、电视、手表&amp;hellip;），无论听觉、视觉、身体和认知能力如何（视障、</description></item><item><title>Html5|新特性PushState</title><link>https://falasool.github.io/posts/html5-pushstate/</link><pubDate>Tue, 12 Mar 2024 19:39:03 +0800</pubDate><guid>https://falasool.github.io/posts/html5-pushstate/</guid><description>History history.pushState() 是什么？简单来说，是目前浏览器已经普遍支持的一种添加浏览历史记录的方法。 首先，让我们来看看 history 对象，它保存了当前窗口访问过的所有页面网址 //</description></item><item><title>Vue | Note | Monster Slayer Game</title><link>https://falasool.github.io/posts/vuejs-monster-slayer/</link><pubDate>Thu, 31 Aug 2023 15:25:38 +0800</pubDate><guid>https://falasool.github.io/posts/vuejs-monster-slayer/</guid><description>Live Deploy Github 仓库 写静态页面 实现功能 点击 ATTACK 怪兽血量下降随机数值 ⭐️ 最关键的：随机数值。 所以 Math.floor(Math.random() * (15 - 10) + 10)，即『生成 [10,15) 范围内的随机浮点数并向下取整</description></item><item><title>Vue3 | ToDoList</title><link>https://falasool.github.io/posts/vue3-todolist/</link><pubDate>Wed, 21 Jun 2023 01:29:15 +0800</pubDate><guid>https://falasool.github.io/posts/vue3-todolist/</guid><description>实现功能 展示任务的列表 使用 v-for 在模板中循环渲染任务项组件，并根据任务的状态（完成或未完成）进行不同的展示样式 新增 todo v-model 实现输入框和数据的双向绑定</description></item></channel></rss>